{
  "windowsAuthentication": true,
  "anonymousAuthentication": true,
  "Application": {
    "AuthType": "NTLM",
    "HostType": "IIS"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Debug",
      "System": "Information",
      "Microsoft": "Information"
    }
  },
  "Kestrel": {
    "Limits": {
      "MaxRequestBodySize": null,
      "MaxConcurrentConnections": 200,
      "KeepAliveTimeout": { "Minutes": 120 },
      "MinRequestBodyDataRate": {
        "BytesPerSecond": 100,
        "GracePeriod": { "Seconds": 10 }
      },
      "MinResponseDataRate": {
        "BytesPerSecond": 100,
        "GracePeriod": { "Seconds": 10 }
      }
    }
  },
  "EntityValidationInfrastructure": {
    "AuthorizationData": {
      "PublicToken": "",
      "SecretToken": ""
    },
    "ValidationData": {
      "ValidationMessages": {
        "Address": {
          "Success": "Сервис автоматической проверки успешно определил адрес.",
          "NotEnoughData": "Сервис автоматической проверки не определил или частично определил адрес. Есть \"лишние\" части или недостаточно данных для разбора. Необходима ручная проверка.",
          "Junk": "Сервис автоматической проверки не смог определить адрес, поскольку его значение было пустым или заведомо \"мусорным\".",
          "HasAlternatives": "Сервис автоматической проверки обнаружил альтернативные варианты адреса."
        },
        "AddressPartCity": {
          "Success": "Сервис автоматической проверки успешно определил город.",
          "Failure": "Сервис автоматической проверки не смог определить город."
        },
        "AddressPartCountry": {
          "Success": "Сервис автоматической проверки успешно определил страну.",
          "Failure": "Сервис автоматической проверки не смог определить страну."
        },
        "AddressPartFias": {
          "Success": "Сервис автоматической проверки успешно определил код ФИАС.",
          "Failure": "Сервис автоматической проверки не смог определить код ФИАС."
        },
        "Fullname": {
          "Success": "Сервис автоматической проверки успешно определил ФИО.",
          "PartialSuccess": "Сервис автоматической проверки не определил или частично определил ФИО. Необходима ручная проверка.",
          "Junk": "Сервис автоматической проверки не смог определить ФИО, поскольку его значение было пустым или заведомо \"мусорным\"."
        },
        "FullnamePartSurname": {
          "Success": "Сервис автоматической проверки успешно определил фамилию.",
          "PartialSuccess": "Сервис автоматической проверки не определил или частично определил фамилию. Необходима ручная проверка.",
          "Junk": "Сервис автоматической проверки не смог определить фамилию, поскольку ее значение было пустым или заведомо \"мусорным\"."
        },
        "FullnamePartName": {
          "Success": "Сервис автоматической проверки успешно определил имя.",
          "PartialSuccess": "Сервис автоматической проверки не определил или частично определил имя. Необходима ручная проверка.",
          "Junk": "Сервис автоматической проверки не смог определить имя, поскольку его значение было пустым или заведомо \"мусорным\"."
        },
        "FullnamePartPatronymic": {
          "Success": "Сервис автоматической проверки успешно определил отчество.",
          "PartialSuccess": "Сервис автоматической проверки не определил или частично определил отчество. Необходима ручная проверка.",
          "Junk": "Сервис автоматической проверки не смог определить отчество, поскольку его значение было пустым или заведомо \"мусорным\"."
        },
        "Gender": {
          "Success": "Сервис автоматической проверки успешно определил пол.",
          "Failure": "Сервис автоматической проверки не смог определить пол."
        },
        "LegalEntityPartInn": {
          "Success": "Сервис автоматической проверки успешно определил ИНН организации.",
          "Failure": "Сервис автоматической проверки не смог определить ИНН организации."
        },
        "LegalEntityPartKpp": {
          "Success": "Сервис автоматической проверки успешно определил КПП организации.",
          "Failure": "Сервис автоматической проверки не смог определить КПП организации."
        },
        "LegalEntityPartOgrn": {
          "Success": "Сервис автоматической проверки успешно определил ОГРН организации.",
          "Failure": "Сервис автоматической проверки не смог определить ОГРН организации."
        },
        "LegalEntityPartOkved": {
          "Success": "Сервис автоматической проверки успешно определил код ОКВЭД организации.",
          "Failure": "Сервис автоматической проверки не смог определить код ОКВЭД организации."
        },
        "LegalEntityPartOpf": {
          "Success": "Сервис автоматической проверки успешно определил ОПФ организации.",
          "Failure": "Сервис автоматической проверки не смог определить ОПФ организации."
        },
        "LegalEntityPartName": {
          "Success": "Сервис автоматической проверки успешно определил название организации.",
          "Failure": "Сервис автоматической проверки не смог определить название организации."
        },
        "LegalEntityPartRegistrationDate": {
          "Success": "Сервис автоматической проверки успешно определил дату регистрации организации.",
          "Failure": "Сервис автоматической проверки не смог определить дату регистрации организации."
        }
      },
      "HttpRequestMessages": {
        "BadRequest": "Сервис автоматической проверки не смог обработать запрос. Некорректный запрос.",
        "Unauthorized": "Сервис автоматической проверки не смог обработать запрос. В запросе отсутствует API-ключ или секретный ключ, или в запросе указан несуществующий ключ.",
        "Forbidden": "Сервис автоматической проверки не смог обработать запрос. Адрес электронной почты не подтвержден, или недостаточно средств для обработки запроса, или исчерпан лимит запросов на день.",
        "MethodNotAllowed": "Сервис автоматической проверки не смог обработать запрос. Запрос сделан с методом, отличным от POST.",
        "TooManyRequests": "Сервис автоматической проверки не смог обработать запрос. Слишком много запросов в секунду или новых соединений в минуту.",
        "InternalServerError": "Сервис автоматической проверки не смог обработать запрос. Произошла внутренняя ошибка сервиса DaData."
      },
      "EnumerationBindings": {
        "Gender": {
          "Male": "М",
          "Female": "Ж"
        }
      }
    },
    "EntityData": {
      "AttributeNames": {
        "Fullname": "FullName",
        "FullnamePartName": "Name",
        "FullnamePartSurname": "Surname",
        "FullnamePartPatronymic": "MiddleName",
        "Gender": "Gender",
        "LegalEntityPartInn": "INN",
        "LegalEntityPartKpp": "KPP",
        "LegalEntityPartOgrn": "OGRN",
        "LegalEntityPartOkved": "OKVED",
        "LegalEntityPartOpf": "OPF",
        "LegalEntityPartName": "LegalEntityName",
        "LegalEntityPartRegistrationDate": "CreationDate",
        "Address": "Address",
        "AddressPartCity": "City",
        "AddressPartCountry": "Country",
        "AddressPartFias": "FIASCode"
      },
      "EntityNames": {
        "Address": "Address"
      }
    },
    "ValidationScenarios": {
      "PhysicalPerson": "CompositePersonRecordStandardization",
      "LegalEntity": "PartySuggestion"
    },
    "Caching": {
      "MdmApiEntityRequests": [
        {
          /* Справочник городов */
          "EntityInfoId": 17,
          "RequestUri": "http://localhost/api/entityInfo/17/entities",
          "EntityFilter": {
            "PagingInfo": {
              "Skip": 0,
              "Take": 10000
            }
          }
        },
        {
          /* Справочник ОПФ */
          "EntityInfoId": 22,
          "RequestUri": "http://localhost/api/entityInfo/22/entities",
          "EntityFilter": {
            "PagingInfo": {
              "Skip": 0,
              "Take": 10000
            }
          }
        },
        {
          /* Справочник стран */
          "EntityInfoId": 35,
          "RequestUri": "http://localhost/api/entityInfo/35/entities",
          "EntityFilter": {
            "PagingInfo": {
              "Skip": 0,
              "Take": 10000
            }
          }
        }
      ],
      "EntityListItemLoadOptions": []
    },
    "LogDailyStats": true,
    "PartySuggestionFuzzySearchThreshold": 80
  }
}
